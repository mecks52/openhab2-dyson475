import java.text.SimpleDateFormat
import java.util.TimeZone

// Rules for Dyson Pure Cool Link (438)

var SimpleDateFormat simpleDF = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS")
// Start of STATE-SET msg
val String startStateSetCmdStr = "{\"msg\":\"STATE-SET\",\"time\":"
// Variable to store String used as command
var String cmdStr

// TOPIC "438/<id>/status/current" ############################################
    // msg "ENVIRONMENTAL-CURRENT-SENSOR-DATA" ############
    // msg "CURRENT-STATE" ################################
    // msg "STATE-CHANGE" #################################
rule "438/<id>/status/current"
when
    Item Dyson438_Topic_Status_Current received update
then
    val String content = Dyson438_Topic_Status_Current.state.toString()
    val String msg = transform("JSONPATH", "$.msg", content)
    if (msg == "ENVIRONMENTAL-CURRENT-SENSOR-DATA") {
        val String tact_str = transform("JSONPATH", "$.data.tact", content)
        if (tact_str != "OFF") {
            var double tact = Float.parseFloat(tact_str)
            tact = (tact - 2731.5)/10
            postUpdate(Dyson438_Tact, tact as Number)
        }
        val String hact_str = transform("JSONPATH", "$.data.hact", content)
        if (hact_str != "OFF") {
            val int hact = Integer.parseInt(hact_str)
            postUpdate(Dyson438_Hact, hact as Number)
        }
    } else if (msg == "CURRENT-STATE") {
        val String fmod_str = transform("JSONPATH", "$.product-state.fpwr", content)
        switch fmod_str {
            case "ON": postUpdate(Dyson438_Fpwr, 1 as Number)
            case "OFF": postUpdate(Dyson438_Fpwr, 0 as Number)
        }
    } else if (msg == "STATE-CHANGE") {
        val String fmod_str = transform("JSONPATH", "$.product-state.fpwr[1]", content)
        switch fmod_str {
            case "ON": postUpdate(Dyson438_Fpwr, 1 as Number)
            case "OFF": postUpdate(Dyson438_Fpwr, 0 as Number)
        }
    }
end
//#############################################################################

// REQUEST "438/<id>/command"##################################################
    // msg "REQUEST-CURRENT-STATE" ########################
rule "Request Current State every 30 seconds"
when
    Time cron "0/30 * * * * ?"
then
    // Create current TimeStamp as UTC
    simpleDF.setTimeZone(TimeZone.getTimeZone("UTC"))
    val String timeStampUtc = simpleDF.format(new java.util.Date())
    cmdStr = "{\"msg\":\"REQUEST-CURRENT-STATE\","
    cmdStr = cmdStr + " \"time\":\"" + timeStampUtc + "Z\","
    cmdStr = cmdStr + " \"mode-reason\": \"LAPP\" }"
    Dyson438_Request.sendCommand(cmdStr)
end
//#############################################################################
